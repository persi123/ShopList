{"version":3,"sources":["actions/errorAction.js","actions/types.js","actions/authAction.js","Component/auth/RegisterModal.js","Component/auth/LoginModal.js","Component/auth/Logout.js","Component/AppNavbar.js","actions/itemAction.js","Component/ShoppingList.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","Component/itemModel.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","RegisterModal","state","modal","name","email","password","toggel","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","console","log","prevProps","this","error","isAuthenticated","NavLink","onClick","href","Modal","isOpen","toggle","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","Axios","post","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","addItem","item","setItemsLoading","ShoppingList","getItems","deleteItem","prompt","items","ListGroup","TransitionGroup","map","_id","CSSTransition","key","timeout","classNames","ListGroupItem","size","DeleteHandler","get","delete","DataId","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middelware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","itemModel","newItem","uuid","marginBottom","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.02574b59.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\r\n\r\n//return errors\r\n\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id }\r\n  };\r\n};\r\n\r\n//Clear errors\r\n\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  };\r\n};\r\n","export const GET_ITEMS = \"GET_ITEMS\";\r\nexport const ADD_ITEMS = \"ADD_ITEMS\";\r\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCESS = \"LOGIN_SUCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCESS = \"LOGOUT_SUCESS\";\r\nexport const REGISTER_SUCESS = \"REGISTER_SUCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCESS,\r\n  REGISTER_SUCESS,\r\n  REGISTER_FAIL\r\n} from \"./types\";\r\nimport Axios from \"axios\";\r\nimport { returnErrors } from \"./errorAction\";\r\n\r\n//check token and load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //user loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  Axios.get(\"/api/auth/user\", tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n\r\n//REgister user\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n  //Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n  console.log(body);\r\n\r\n  Axios.post(\"/api/users\", body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: REGISTER_SUCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n//login user\r\nexport const login = ({ email, password }) => dispatch => {\r\n  //Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n  console.log(body);\r\n\r\n  Axios.post(\"/api/auth\", body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: LOGIN_SUCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCESS\r\n  };\r\n};\r\n\r\nexport const tokenConfig = getState => {\r\n  //Get token from local storage\r\n  const token = getState().auth.token;\r\n\r\n  //Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  NavLink,\r\n  Input,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { register } from \"../../actions/authAction\";\r\nimport { clearErrors } from \"../../actions/errorAction\";\r\n\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // check for register error\r\n      if (error.id === \"REGISTER_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    //is authenticated close model\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggel();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggel = () => {\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    //create user object\r\n\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    };\r\n\r\n    //attempt to register\r\n    this.props.register(newUser);\r\n    console.log(newUser);\r\n    // this.props.addItem(newItem);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggel} href=\"#\">\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggel}>\r\n          <ModalHeader toggle={this.toggel}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color=\"danger\">{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"name\">Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  placeholder=\"Name\"\r\n                  onChange={this.onChange}\r\n                  className=\"mb-3\"\r\n                ></Input>\r\n\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.onChange}\r\n                  className=\"mb-3\"\r\n                />\r\n\r\n                <Label for=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { register, clearErrors })(\r\n  RegisterModal\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  NavLink,\r\n  Input,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/authAction\";\r\nimport { clearErrors } from \"../../actions/errorAction\";\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // check for register error\r\n      if (error.id === \"LOGIN_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    //is authenticated close model\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggel();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggel = () => {\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n\r\n    //attempt to login\r\n    this.props.login(user);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggel} href=\"#\">\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggel}>\r\n          <ModalHeader toggle={this.toggel}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color=\"danger\">{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.onChange}\r\n                  className=\"mb-3\"\r\n                />\r\n\r\n                <Label for=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/authAction\";\r\nimport PropsTypes from \"prop-types\";\r\n\r\nclass Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropsTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink onClick={this.props.logout} href=\"#\">\r\n          Logout\r\n        </NavLink>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logout })(Logout);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from \"reactstrap\";\r\nimport RegisterModal from \"./auth/RegisterModal\";\r\nimport LoginModal from \"./auth/LoginModal\";\r\nimport Logout from \"./auth/Logout\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggel = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggel} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                {this.props.isAuthenticated ? null : (\r\n                  <NavItem>\r\n                    <RegisterModal />\r\n                  </NavItem>\r\n                )}\r\n                {this.props.isAuthenticated ? null : (\r\n                  <NavItem>\r\n                    <LoginModal />\r\n                  </NavItem>\r\n                )}\r\n\r\n                <NavItem>\r\n                  <Logout />\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AppNavbar);\r\n","import { GET_ITEMS, ADD_ITEMS, DELETE_ITEMS, ITEMS_LOADING } from \"./types\";\r\nimport Axios from \"axios\";\r\nimport { tokenConfig } from \"./authAction\";\r\nimport { returnErrors } from \"./errorAction\";\r\n\r\nexport const getItems = () => dispatch => {\r\n  dispatch(setItemsLoading());\r\n  Axios.get(\"/api/items\").then(res =>\r\n    dispatch({\r\n      type: GET_ITEMS,\r\n      payload: res.data\r\n    })\r\n  );\r\n};\r\n\r\nexport const addItem = name => (dispatch, getState) => {\r\n  console.log(name);\r\n  Axios.post(\"/api/items\", name, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: ADD_ITEMS,\r\n        item: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\nexport const deleteItem = id => (dispatch, getState) => {\r\n  console.log(id);\r\n  Axios.delete(`/api/items/${id}`, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: DELETE_ITEMS,\r\n        DataId: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport uuid from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItems, deleteItem, addItem } from \"../actions/itemAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ShoppingList extends Component {\r\n  componentDidMount() {\r\n    this.props.getItems();\r\n  }\r\n\r\n  DeleteHandler(id) {\r\n    this.props.deleteItem(id);\r\n  }\r\n\r\n  AddItem() {\r\n    const name = prompt(\"enter name\");\r\n    console.log(name);\r\n    if (name) {\r\n      this.props.addItem(name);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.props.item;\r\n\r\n    return (\r\n      <Container>\r\n        {/* <Button\r\n          color=\"dark\"\r\n          style={{ marginBottom: \"2rem\" }}\r\n          onClick={this.AddItem}\r\n        >\r\n          AddItem\r\n        </Button> */}\r\n\r\n        <ListGroup>\r\n          <TransitionGroup className=\"shopping-list\">\r\n            {items.map(({ _id, name }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                <ListGroupItem>\r\n                  <Button\r\n                    className=\"remove-btn\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => this.DeleteHandler(_id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  {name}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n// ShoppingList.propotype = {\r\n//   getItems: PropTypes.func.isRequired,\r\n//   item: PropTypes.object.isRequired\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item\r\n});\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     PostData: data => dispatch(RecivingData(data)),\r\n//     Delete: Postid => dispatch(DeletePost(Postid))\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, { getItems, deleteItem, addItem })(\r\n  ShoppingList\r\n);\r\n","import uuid from \"uuid\";\r\nimport {\r\n  GET_ITEMS,\r\n  ADD_ITEMS,\r\n  DELETE_ITEMS,\r\n  ITEMS_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,  \r\n        loading: false\r\n      };\r\n    case DELETE_ITEMS:\r\n      console.log(action.DataId);\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.DataId)\r\n      };\r\n    case ADD_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.item]\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCESS,\r\n  REGISTER_SUCESS,\r\n  REGISTER_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      };\r\n\r\n    case LOGIN_SUCESS:\r\n    case REGISTER_SUCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCESS:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n  item: itemReducer,\r\n  error: errorReducer,\r\n  auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middelware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middelware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  input,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../actions/itemAction\";\r\nimport uuid from \"uuid\";\r\nclass itemModel extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: \" \"\r\n  };\r\n  toggel = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newItem = {\r\n      id: uuid(),\r\n      name: this.state.name\r\n    };\r\n\r\n    this.props.addItem(newItem);\r\n\r\n    this.toggel();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"dark\"\r\n          style={{ marginBottom: \"2rem\" }}\r\n          onClick={this.toggel}\r\n        >\r\n          AddItem\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggel}>\r\n          <ModalHeader toggle={this.toggel}>Add To Shopping List</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"item\">Item</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"item\"\r\n                  placeholder=\"Add shopping item \"\r\n                  onChange={this.onChange}\r\n                ></Input>\r\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                  AddItem\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addItem })(itemModel);\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AppNavbar from \"./Component/AppNavbar\";\nimport ShoppingList from \"./Component/ShoppingList\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ItemModal from \"./Component/itemModel\";\nimport { Container } from \"reactstrap\";\nimport { loadUser } from \"./actions/authAction\";\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <ItemModal />\n            <ShoppingList />\n          </Container>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}