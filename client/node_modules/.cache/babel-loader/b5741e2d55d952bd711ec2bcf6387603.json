{"ast":null,"code":"import _defineProperty from\"E:\\\\MERN\\\\project1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"E:\\\\MERN\\\\project1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\MERN\\\\project1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"E:\\\\MERN\\\\project1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"E:\\\\MERN\\\\project1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"E:\\\\MERN\\\\project1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Label,NavLink,Input,Alert}from\"reactstrap\";import{connect}from\"react-redux\";import{register}from\"../../actions/authAction\";import{clearErrors}from\"../../actions/errorAction\";var RegisterModal=/*#__PURE__*/function(_Component){_inherits(RegisterModal,_Component);function RegisterModal(){var _getPrototypeOf2;var _this;_classCallCheck(this,RegisterModal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(RegisterModal)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={modal:false,name:\"\",email:\"\",password:\"\",msg:null};_this.toggel=function(){_this.props.clearErrors();_this.setState({modal:!_this.state.modal});};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var _this$state=_this.state,name=_this$state.name,email=_this$state.email,password=_this$state.password;//create user object\nvar newUser={name:name,email:email,password:password};//attempt to register\n_this.props.register(newUser);console.log(newUser);// this.props.addItem(newItem);\n};return _this;}_createClass(RegisterModal,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props=this.props,error=_this$props.error,isAuthenticated=_this$props.isAuthenticated;if(error!==prevProps.error){// check for register error\nif(error.id===\"REGISTER_FAIL\"){this.setState({msg:error.msg.msg});}else{this.setState({msg:null});}}//is authenticated close model\nif(this.state.modal){if(isAuthenticated){this.toggel();}}}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(NavLink,{onClick:this.toggel,href:\"#\"},\"Register\"),React.createElement(Modal,{isOpen:this.state.modal,toggle:this.toggel},React.createElement(ModalHeader,{toggle:this.toggel},\"Register\"),React.createElement(ModalBody,null,this.state.msg?React.createElement(Alert,{color:\"danger\"},this.state.msg):null,React.createElement(Form,{onSubmit:this.onSubmit},React.createElement(FormGroup,null,React.createElement(Label,{for:\"name\"},\"Name\"),React.createElement(Input,{type:\"text\",name:\"name\",id:\"name\",placeholder:\"Name\",onChange:this.onChange,className:\"mb-3\"}),React.createElement(Label,{for:\"email\"},\"Email\"),React.createElement(Input,{type:\"email\",name:\"email\",id:\"email\",placeholder:\"Email\",onChange:this.onChange,className:\"mb-3\"}),React.createElement(Label,{for:\"password\"},\"Password\"),React.createElement(Input,{type:\"password\",name:\"password\",id:\"password\",placeholder:\"Password\",onChange:this.onChange}),React.createElement(Button,{color:\"dark\",style:{marginTop:\"2rem\"},block:true},\"Register\"))))));}}]);return RegisterModal;}(Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated,error:state.error};};export default connect(mapStateToProps,{register:register,clearErrors:clearErrors})(RegisterModal);","map":{"version":3,"sources":["E:/MERN/project1/client/src/Component/auth/RegisterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","NavLink","Input","Alert","connect","register","clearErrors","RegisterModal","state","modal","name","email","password","msg","toggel","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","console","log","prevProps","error","isAuthenticated","id","marginTop","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  NavLink,\r\n  Input,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { register } from \"../../actions/authAction\";\r\nimport { clearErrors } from \"../../actions/errorAction\";\r\n\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // check for register error\r\n      if (error.id === \"REGISTER_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    //is authenticated close model\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggel();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggel = () => {\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, email, password } = this.state;\r\n\r\n    //create user object\r\n\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    };\r\n\r\n    //attempt to register\r\n    this.props.register(newUser);\r\n    console.log(newUser);\r\n    // this.props.addItem(newItem);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggel} href=\"#\">\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggel}>\r\n          <ModalHeader toggle={this.toggel}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color=\"danger\">{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"name\">Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  placeholder=\"Name\"\r\n                  onChange={this.onChange}\r\n                  className=\"mb-3\"\r\n                ></Input>\r\n\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.onChange}\r\n                  className=\"mb-3\"\r\n                />\r\n\r\n                <Label for=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { register, clearErrors })(\r\n  RegisterModal\r\n);\r\n"]},"metadata":{},"sourceType":"module"}