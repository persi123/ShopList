{"ast":null,"code":"import{USER_LOADING,USER_LOADED,AUTH_ERROR,LOGIN_SUCESS,LOGIN_FAIL,LOGOUT_SUCESS,REGISTER_SUCESS,REGISTER_FAIL}from\"./types\";import Axios from\"axios\";import{returnErrors}from\"./errorAction\";//check token and load user\nexport var loadUser=function loadUser(){return function(dispatch,getState){//user loading\ndispatch({type:USER_LOADING});Axios.get(\"/api/auth/user\",tokenConfig(getState)).then(function(res){return dispatch({type:USER_LOADED,payload:res.data});}).catch(function(err){dispatch(returnErrors(err.response.data,err.response.status));dispatch({type:AUTH_ERROR});});};};//REgister user\nexport var register=function register(_ref){var name=_ref.name,email=_ref.email,password=_ref.password;return function(dispatch){//Header\nvar config={headers:{\"Content-Type\":\"application/json\"}};var body=JSON.stringify({name:name,email:email,password:password});console.log(body);Axios.post(\"/api/users\",body,config).then(function(res){return dispatch({type:REGISTER_SUCESS,payload:res.data});}).catch(function(err){dispatch(returnErrors(err.response.data,err.response.status,\"REGISTER_FAIL\"));dispatch({type:REGISTER_FAIL});});};};//login user\nexport var login=function login(_ref2){var email=_ref2.email,password=_ref2.password;return function(dispatch){//Header\nvar config={headers:{\"Content-Type\":\"application/json\"}};var body=JSON.stringify({email:email,password:password});console.log(body);Axios.post(\"/api/auth\",body,config).then(function(res){return dispatch({type:LOGIN_SUCESS,payload:res.data});}).catch(function(err){dispatch(returnErrors(err.response.data,err.response.status,\"LOGIN_FAIL\"));dispatch({type:LOGIN_FAIL});});};};// Logout User\nexport var logout=function logout(){return{type:LOGOUT_SUCESS};};export var tokenConfig=function tokenConfig(getState){//Get token from local storage\nvar token=getState().auth.token;//Header\nvar config={headers:{\"Content-type\":\"application/json\"}};if(token){config.headers[\"x-auth-token\"]=token;}return config;};","map":{"version":3,"sources":["E:/MERN/project1/client/src/actions/authAction.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCESS","LOGIN_FAIL","LOGOUT_SUCESS","REGISTER_SUCESS","REGISTER_FAIL","Axios","returnErrors","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","catch","err","response","status","register","name","email","password","config","headers","body","JSON","stringify","console","log","post","login","logout","token","auth"],"mappings":"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","sourcesContent":["import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCESS,\r\n  REGISTER_SUCESS,\r\n  REGISTER_FAIL\r\n} from \"./types\";\r\nimport Axios from \"axios\";\r\nimport { returnErrors } from \"./errorAction\";\r\n\r\n//check token and load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //user loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  Axios.get(\"/api/auth/user\", tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n\r\n//REgister user\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n  //Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n  console.log(body);\r\n\r\n  Axios.post(\"/api/users\", body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: REGISTER_SUCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n//login user\r\nexport const login = ({ email, password }) => dispatch => {\r\n  //Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n  console.log(body);\r\n\r\n  Axios.post(\"/api/auth\", body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: LOGIN_SUCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCESS\r\n  };\r\n};\r\n\r\nexport const tokenConfig = getState => {\r\n  //Get token from local storage\r\n  const token = getState().auth.token;\r\n\r\n  //Header\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}