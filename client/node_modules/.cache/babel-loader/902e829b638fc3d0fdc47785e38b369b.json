{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN\\\\project1\\\\client\\\\src\\\\Component\\\\auth\\\\LoginModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, NavLink, Input, Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/authAction\";\nimport { clearErrors } from \"../../actions/errorAction\";\n\nclass LoginModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n\n    this.toggel = () => {\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      };\n      this.props.login(user);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      // check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } //is authenticated close model\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggel();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      onClick: this.toggel,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Login\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      onChange: this.onChange,\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: \"2rem\"\n      },\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Login\"))))));\n  }\n\n}\n\nLoginModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(LoginModal);","map":{"version":3,"sources":["E:/MERN/project1/client/src/Component/auth/LoginModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","NavLink","Input","Alert","connect","PropTypes","login","clearErrors","LoginModal","state","modal","email","password","msg","toggel","props","setState","onChange","e","target","name","value","onSubmit","preventDefault","user","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  NavLink,\r\n  Input,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/authAction\";\r\nimport { clearErrors } from \"../../actions/errorAction\";\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // check for register error\r\n      if (error.id === \"LOGIN_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    //is authenticated close model\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggel();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggel = () => {\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n    this.props.login(user)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggel} href=\"#\">\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggel}>\r\n          <ModalHeader toggle={this.toggel}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color=\"danger\">{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.onChange}\r\n                  className=\"mb-3\"\r\n                />\r\n\r\n                <Label for=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);\r\n"]},"metadata":{},"sourceType":"module"}